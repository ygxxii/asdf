import{_ as n,r as t,o as i,c as d,a as e,b as a,d as s,f as c,e as r}from"./app.cdf89d63.js";const l={},u=r('<h1 id="introducao" tabindex="-1"><a class="header-anchor" href="#introducao" aria-hidden="true">#</a> Introdução</h1><blockquote><p>Hi, we&#39;ve recently migrated our docs and added some new pages. If you would like to help translate this page, see the &quot;Edit this page&quot; link at the bottom of the page.</p></blockquote><p>O <code>asdf</code> é um gerenciador de versões. Todas as definições de versão das ferramentas estão contidas no arquivo (<code>.tool-versions</code>), o qual você pode compartilhar com o seu time no repositório Git de um projeto e garantir que todos estejam usando <strong>exatamente</strong> a mesma versão das ferramentas.</p><p>A maneira antiga de trabalhar necessitava diversos gerenciadores de versão, cada um deles com uma documentação, arquivos de configuração diferentes (manipulação do <code>$PATH</code>, shims e variáveis de ambiente, por exemplo). O <code>asdf</code> provê um único arquivo de configuração e uma única interface para simplificar o fluxo de desenvolvimento, podendo ser ampliado para todas as ferramentas através de um simples plugin.</p><h2 id="funcionamento" tabindex="-1"><a class="header-anchor" href="#funcionamento" aria-hidden="true">#</a> Funcionamento</h2>',5),m=e("code",null,"asdf",-1),p={href:"https://en.wikipedia.org/wiki/Shim_(computing)",target:"_blank",rel:"noopener noreferrer"},h=e("code",null,"asdf",-1),f=e("code",null,".tool-versions",-1),_=e("h2",{id:"projetos-relacionados",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#projetos-relacionados","aria-hidden":"true"},"#"),a(" Projetos relacionados")],-1),g=e("h3",{id:"nvm-n-rbenv-etc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nvm-n-rbenv-etc","aria-hidden":"true"},"#"),a(" nvm / n / rbenv etc")],-1),v={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/tj/n",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/rbenv/rbenv",target:"_blank",rel:"noopener noreferrer"},q=e("p",null,[a("O "),e("code",null,"asdf"),a(" é bem similar e foi criado para competir neste meio de ferramentas de gerenciamento de versão. O grande diferencial do "),e("code",null,"asdf"),a(" é que seu sistema de plugins elimina a necessidade de um gerenciador de versões para cada ferramenta, esta com diferentes comandos e arquivos de configuração.")],-1),k=e("h3",{id:"direnv",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#direnv","aria-hidden":"true"},"#"),a(" direnv")],-1),O=e("blockquote",null,[e("p",null,"Aumenta os shells existentes com a possibilidade de utilizar diferentes variáveis de ambiente com base no diretório atual.")],-1),w=e("code",null,"asdf",-1),N={href:"https://github.com/asdf-community/asdf-direnv",target:"_blank",rel:"noopener noreferrer"},j=e("code",null,"asdf-direnv",-1),y={href:"https://direnv.net/",target:"_blank",rel:"noopener noreferrer"},V=e("h3",{id:"homebrew",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#homebrew","aria-hidden":"true"},"#"),a(" Homebrew")],-1),S=e("blockquote",null,[e("p",null,"O gerenciador de pacotes faltante para o macOS (ou Linux)")],-1),H=e("p",null,[a("O Homebrew gerencia seus pacotes e dependências destes pacotes. O "),e("code",null,"asdf"),a(" não gerencia dependencias, não é um gerenciador de pacotes, a escolha do gerenciador de pacotes é reservada ao usuário.")],-1),T={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},z=e("h3",{id:"nixos",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nixos","aria-hidden":"true"},"#"),a(" NixOS")],-1),A=e("blockquote",null,[e("p",null,"O Nix é uma ferramenta que relaciona o gerenciamento de pacotes e as configurações de sistema.")],-1),E=e("p",null,[a("O NixOS visa construir ambientes verdadeiramente replicáveis através da gerência das versões exatas dos pacotes e dependências de cada ferramenta, algo que o "),e("code",null,"asdf"),a(" não faz. O NixOS faz isso através da sua própria linguagem de programação, muitas ferramentas da linha de comando e uma coleção de pacotes contendo mais de 60,000 destes.")],-1),I=e("p",null,[a("Novamente, o "),e("code",null,"asdf"),a(" não gerencia dependências/pacotes e não é um gerenciador de pacotes.")],-1),P={href:"https://nixos.org/guides/how-nix-works.html",target:"_blank",rel:"noopener noreferrer"},B=r('<h2 id="por-que-usar-o-asdf" tabindex="-1"><a class="header-anchor" href="#por-que-usar-o-asdf" aria-hidden="true">#</a> Por que usar o asdf?</h2><p>O <code>asdf</code> garante que equipes utilizem exatamente a mesma versão de alguma ferramenta, com suporte para <strong>diversas</strong> delas através do sistema de plugins e a <em>simplicidade e familiaridade</em> de ser um único <strong>shell</strong> script que você inclui na configuração do seu shell</p><div class="custom-container tip"><p class="custom-container-title">Nota</p><p>O <code>asdf</code> não foi feito para ser o gerenciador de pacotes do seu sistema, mas sim uma ferramenta para gerenciar versões de outras ferramentas. Não é por que é possível criar um plugin para qualquer ferramenta/linguagem com o <code>asdf</code> que esta sempre será a solução mais adequada.</p></div>',3);function L(C,F){const o=t("ExternalLinkIcon");return i(),d("div",null,[u,e("p",null,[a("Após instalar e configurar o "),m,a(" no seu shell, plugins podem ser instalados para gerenciar determinadas ferramentas. Quando uma ferramenta é instalada por um plugin, os executáveis que foram instalados possuem "),e("a",p,[a("shims"),s(o)]),a(" criados para cada um deles. Quando você roda algum destes executáveis, o shim é executado, permitindo que o "),h,a(" identifique qual versão da ferramenta está configurada no arquivo "),f,a(" e execute esta versão.")]),_,g,e("p",null,[a("Ferramentas como o "),e("a",v,[a("nvm"),s(o)]),a(", "),e("a",b,[a("n"),s(o)]),a(" e "),e("a",x,[a("rbenv"),s(o)]),a(" são escritas em shell scripts que criam shims para os executáveis instalados para essas ferramentas.")]),q,c(" ### pyenv\n\nTODO: someone with Python background expand on this\n\n`asdf` has some similarities to `pyenv` but is missing some key features. The `asdf` team is looking at introducing some of these `pyenv` specific features, though no roadmap or timeline is available. "),k,O,e("p",null,[a("O "),w,a(" não gerencia variáveis de ambiente, entretanto existe o plugin "),e("a",N,[j,s(o)]),a(" para integrar o comportamento do direnv ao asdf.")]),e("p",null,[a("Veja a "),e("a",y,[a("documentação do direnv"),s(o)]),a(" para mais detalhes.")]),V,S,H,e("p",null,[a("Veja a "),e("a",T,[a("documentação do Homebrew"),s(o)]),a(" para mais detalhes.")]),z,A,E,I,e("p",null,[a("Veja a "),e("a",P,[a("documentação do NixOS"),s(o)]),a(" para mais detalhes.")]),B])}const D=n(l,[["render",L],["__file","introduction.html.vue"]]);export{D as default};
